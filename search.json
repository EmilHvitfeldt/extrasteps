[{"path":[]},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Emil Hvitfeldt Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emil Hvitfeldt. Author, maintainer.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hvitfeldt E (2022). extrasteps: Steps 'recipes' Package. https://github.com/EmilHvitfeldt/extrasteps, https://emilhvitfeldt.github.io/extrasteps/.","code":"@Manual{,   title = {extrasteps: More Steps for the 'recipes' Package},   author = {Emil Hvitfeldt},   year = {2022},   note = {https://github.com/EmilHvitfeldt/extrasteps, https://emilhvitfeldt.github.io/extrasteps/}, }"},{"path":"https://emilhvitfeldt.github.io/extrasteps/index.html","id":"extrasteps","dir":"","previous_headings":"","what":"More Steps for the recipes Package","title":"More Steps for the recipes Package","text":"goal extrasteps provide additional steps recipes.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"More Steps for the recipes Package","text":"can install released version extrasteps CRAN : development version GitHub :","code":"install.packages(\"extrasteps\") # install.packages(\"devtools\") devtools::install_github(\"EmilHvitfeldt/extrasteps\")"},{"path":"https://emilhvitfeldt.github.io/extrasteps/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"More Steps for the recipes Package","text":"Please note extrasteps project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_after.html","id":null,"dir":"Reference","previous_headings":"","what":"Time after Recurrent Date Time Event — step_date_after","title":"Time after Recurrent Date Time Event — step_date_after","text":"step_date_after creates specification recipe step create new columns indicating time recurrent event.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_after.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time after Recurrent Date Time Event — step_date_after","text":"","code":"step_date_after(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   rules = list(),   transform = \"identity\",   columns = NULL,   skip = FALSE,   id = rand_id(\"date_after\") )"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_after.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time after Recurrent Date Time Event — step_date_after","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role used step since new variables created. trained logical indicate quantities preprocessing estimated. rules Named list almanac rules. transform function character indication function used oon resulting variables. See details allowed names functions. columns character string variables used inputs. field placeholder populated prep.recipe() used. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_after.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time after Recurrent Date Time Event — step_date_after","text":"updated version recipe new check added sequence existing operations.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_after.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time after Recurrent Date Time Event — step_date_after","text":"transform argument can function takes numeric vector returns numeric vector length. can also character vector, supported vector names. functions come offset avoid Inf.  effect transform illustrated .  naming resulting variables form","code":"\"identity\" function(x) x  \"inverse\" function(x) 1 / (x + 0.5)  \"exp\" function(x) exp(x)  \"log\" function(x) log(x + 0.5) {variable name}_after_{name of rule}"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_after.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time after Recurrent Date Time Event — step_date_after","text":"","code":"library(recipes) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #>  #> Attaching package: ‘recipes’ #> The following object is masked from ‘package:stats’: #>  #>     step library(extrasteps) library(almanac) library(modeldata)  data(Chicago)  on_easter <- yearly() %>% recur_on_easter() on_weekend <- weekly() %>% recur_on_weekends()  rules <- list(easter = on_easter, weekend = on_weekend)  rec_spec <- recipe(ridership ~ date, data = Chicago) %>%   step_date_after(date, rules = rules)  rec_spec_preped <- prep(rec_spec)  bake(rec_spec_preped, new_data = NULL) #> # A tibble: 5,698 × 3 #>    ridership date_after_easter date_after_weekend #>        <dbl>             <dbl>              <dbl> #>  1     15.7                274                  1 #>  2     15.8                275                  2 #>  3     15.9                276                  3 #>  4     15.9                277                  4 #>  5     15.4                278                  5 #>  6      2.42               279                  0 #>  7      1.47               280                  0 #>  8     15.5                281                  1 #>  9     15.9                282                  2 #> 10     15.9                283                  3 #> # … with 5,688 more rows"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_before.html","id":null,"dir":"Reference","previous_headings":"","what":"Time before Recurrent Date Time Event — step_date_before","title":"Time before Recurrent Date Time Event — step_date_before","text":"step_date_before creates specification recipe step create new columns indicating time recurrent event.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_before.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time before Recurrent Date Time Event — step_date_before","text":"","code":"step_date_before(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   rules = list(),   transform = \"identity\",   columns = NULL,   skip = FALSE,   id = rand_id(\"date_before\") )"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_before.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time before Recurrent Date Time Event — step_date_before","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role used step since new variables created. trained logical indicate quantities preprocessing estimated. rules Named list almanac rules. transform function character indication function used oon resulting variables. See details allowed names functions. columns character string variables used inputs. field placeholder populated prep.recipe() used. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_before.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time before Recurrent Date Time Event — step_date_before","text":"updated version recipe new check added sequence existing operations.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_before.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time before Recurrent Date Time Event — step_date_before","text":"transform argument can function takes numeric vector returns numeric vector length. can also character vector, supported vector names. functions come offset avoid Inf.  effect transform illustrated .  naming resulting variables form","code":"\"identity\" function(x) x  \"inverse\" function(x) 1 / (x + 0.5)  \"exp\" function(x) exp(x)  \"log\" function(x) log(x + 0.5) {variable name}_before_{name of rule}"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_before.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time before Recurrent Date Time Event — step_date_before","text":"","code":"library(recipes) library(extrasteps) library(almanac) library(modeldata)  data(Chicago)  on_easter <- yearly() %>% recur_on_easter() on_weekend <- weekly() %>% recur_on_weekends()  rules <- list(easter = on_easter, weekend = on_weekend)  rec_spec <- recipe(ridership ~ date, data = Chicago) %>%   step_date_before(date, rules = rules)  rec_spec_preped <- prep(rec_spec)  bake(rec_spec_preped, new_data = NULL) #> # A tibble: 5,698 × 3 #>    ridership date_before_easter date_before_weekend #>        <dbl>              <dbl>               <dbl> #>  1     15.7                  83                   5 #>  2     15.8                  82                   4 #>  3     15.9                  81                   3 #>  4     15.9                  80                   2 #>  5     15.4                  79                   1 #>  6      2.42                 78                   0 #>  7      1.47                 77                   0 #>  8     15.5                  76                   5 #>  9     15.9                  75                   4 #> 10     15.9                  74                   3 #> # … with 5,688 more rows"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_nearest.html","id":null,"dir":"Reference","previous_headings":"","what":"Time to Nearest Recurrent Date Time Event — step_date_nearest","title":"Time to Nearest Recurrent Date Time Event — step_date_nearest","text":"step_date_nearest creates specification recipe step create new columns indicating time nearest recurrent event.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_nearest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time to Nearest Recurrent Date Time Event — step_date_nearest","text":"","code":"step_date_nearest(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   rules = list(),   transform = \"identity\",   columns = NULL,   skip = FALSE,   id = rand_id(\"date_nearest\") )"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_nearest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time to Nearest Recurrent Date Time Event — step_date_nearest","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role used step since new variables created. trained logical indicate quantities preprocessing estimated. rules Named list almanac rules. transform function character indication function used oon resulting variables. See details allowed names functions. columns character string variables used inputs. field placeholder populated prep.recipe() used. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_nearest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time to Nearest Recurrent Date Time Event — step_date_nearest","text":"updated version recipe new check added sequence existing operations.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_nearest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time to Nearest Recurrent Date Time Event — step_date_nearest","text":"transform argument can function takes numeric vector returns numeric vector length. can also character vector, supported vector names. functions come offset avoid Inf.  effect transform illustrated .  naming resulting variables form","code":"\"identity\" function(x) x  \"inverse\" function(x) 1 / (x + 0.5)  \"exp\" function(x) exp(x)  \"log\" function(x) log(x + 0.5) {variable name}_nearest_{name of rule}"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_date_nearest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time to Nearest Recurrent Date Time Event — step_date_nearest","text":"","code":"library(recipes) library(extrasteps) library(almanac) library(modeldata)  data(Chicago)  on_easter <- yearly() %>% recur_on_easter() on_weekend <- weekly() %>% recur_on_weekends()  rules <- list(easter = on_easter, weekend = on_weekend)  rec_spec <- recipe(ridership ~ date, data = Chicago) %>%   step_date_nearest(date, rules = rules)  rec_spec_preped <- prep(rec_spec)  bake(rec_spec_preped, new_data = NULL) #> # A tibble: 5,698 × 3 #>    ridership date_nearest_easter date_nearest_weekend #>        <dbl>               <dbl>                <dbl> #>  1     15.7                   83                    1 #>  2     15.8                   82                    2 #>  3     15.9                   81                    3 #>  4     15.9                   80                    2 #>  5     15.4                   79                    1 #>  6      2.42                  78                    0 #>  7      1.47                  77                    0 #>  8     15.5                   76                    1 #>  9     15.9                   75                    2 #> 10     15.9                   74                    3 #> # … with 5,688 more rows"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_difftime.html","id":null,"dir":"Reference","previous_headings":"","what":"difftimearithmic Transformation — step_difftime","title":"difftimearithmic Transformation — step_difftime","text":"step_difftime creates specification recipe step calculate difftimes data.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_difftime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"difftimearithmic Transformation — step_difftime","text":"","code":"step_difftime(   recipe,   ...,   role = NA,   trained = FALSE,   time = NULL,   tz = NULL,   unit = \"auto\",   columns = NULL,   skip = FALSE,   id = rand_id(\"difftime\") )"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_difftime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"difftimearithmic Transformation — step_difftime","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables affected step. See selections() details.  tidy method, currently used. role used step since new variables created. trained logical indicate quantities preprocessing estimated. time date-time date objects. Used reference. Must match type variable. tz optional time zone specification used conversion, mainly \"POSIXlt\" objects. unit character string. Units results desired. Must one \"auto\", \"secs\", \"mins\", \"hours\",\"days\",  \"weeks\" Defaults \"auto\". columns character string variable names populated (eventually) terms argument. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_difftime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"difftimearithmic Transformation — step_difftime","text":"updated version recipe new step added sequence existing steps (). tidy method, tibble columns terms (columns affected) base.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_difftime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"difftimearithmic Transformation — step_difftime","text":"","code":"library(recipes) example_date <- data.frame(   dates = seq(as.Date(\"2010/1/1\"), as.Date(\"2016/1/1\"), by = \"quarter\")  )   example_datetime <- data.frame(   datetimes = seq(ISOdate(1993,1,1), ISOdate(1993,1,2), by = \"hour\")  )   rec <- recipe(~ dates, data = example_date) %>%   step_difftime(dates, time = as.Date(\"2010/1/1\"))  difftime_obj <- prep(rec) juice(difftime_obj) #> # A tibble: 25 × 1 #>       dates #>       <dbl> #>  1        0 #>  2  7776000 #>  3 15638400 #>  4 23587200 #>  5 31536000 #>  6 39312000 #>  7 47174400 #>  8 55123200 #>  9 63072000 #> 10 70934400 #> # … with 15 more rows  recipe(~ dates, data = example_date) %>%   step_difftime(dates, time = as.Date(\"2010/1/1\"), unit = \"weeks\") %>%   prep() %>%   juice() #> # A tibble: 25 × 1 #>    dates #>    <dbl> #>  1   0   #>  2  12.9 #>  3  25.9 #>  4  39   #>  5  52.1 #>  6  65   #>  7  78   #>  8  91.1 #>  9 104.  #> 10 117.  #> # … with 15 more rows  recipe(~ datetimes, data = example_datetime) %>%   step_difftime(datetimes, time = ISOdate(1993,1,1), unit = \"secs\") %>%   prep() %>%   juice() #> # A tibble: 25 × 1 #>    datetimes #>        <dbl> #>  1         0 #>  2      3600 #>  3      7200 #>  4     10800 #>  5     14400 #>  6     18000 #>  7     21600 #>  8     25200 #>  9     28800 #> 10     32400 #> # … with 15 more rows"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_time_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Indicate Recurrent Date Time Event — step_time_event","title":"Indicate Recurrent Date Time Event — step_time_event","text":"step_time_event creates specification recipe step create new columns indicating date fall recurrent event.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_time_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indicate Recurrent Date Time Event — step_time_event","text":"","code":"step_time_event(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   rules = list(),   columns = NULL,   skip = FALSE,   id = rand_id(\"time_event\") )"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_time_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indicate Recurrent Date Time Event — step_time_event","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role used step since new variables created. trained logical indicate quantities preprocessing estimated. rules Named list almanac rules. columns character string variables used inputs. field placeholder populated prep.recipe() used. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_time_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indicate Recurrent Date Time Event — step_time_event","text":"updated version recipe new check added sequence existing operations.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_time_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indicate Recurrent Date Time Event — step_time_event","text":"","code":"library(recipes) library(extrasteps) library(almanac) library(modeldata)  data(Chicago)  on_easter <- yearly() %>% recur_on_easter() on_weekend <- weekly() %>% recur_on_weekends()  rules <- list(easter = on_easter, weekend = on_weekend)  rec_spec <- recipe(ridership ~ date, data = Chicago) %>%   step_time_event(date, rules = rules)  rec_spec_preped <- prep(rec_spec)  bake(rec_spec_preped, new_data = NULL) #> # A tibble: 5,698 × 3 #>    ridership date_easter date_weekend #>        <dbl> <lgl>       <lgl>        #>  1     15.7  FALSE       FALSE        #>  2     15.8  FALSE       FALSE        #>  3     15.9  FALSE       FALSE        #>  4     15.9  FALSE       FALSE        #>  5     15.4  FALSE       FALSE        #>  6      2.42 FALSE       TRUE         #>  7      1.47 FALSE       TRUE         #>  8     15.5  FALSE       FALSE        #>  9     15.9  FALSE       FALSE        #> 10     15.9  FALSE       FALSE        #> # … with 5,688 more rows"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_yeet.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes date and datetimes variables — step_yeet","title":"Removes date and datetimes variables — step_yeet","text":"step_yeet creates specification recipe step remove date datetime variables. (meme)","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_yeet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes date and datetimes variables — step_yeet","text":"","code":"step_yeet(   recipe,   ...,   role = NA,   trained = FALSE,   removals = NULL,   skip = FALSE,   id = rand_id(\"yeet\") )"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_yeet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes date and datetimes variables — step_yeet","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role used step since new variables created. trained logical indicate quantities preprocessing estimated. removals character string contains names columns removed. values determined prep.recipe() called. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_yeet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes date and datetimes variables — step_yeet","text":"updated version recipe new step added sequence existing operations.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/step_yeet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes date and datetimes variables — step_yeet","text":"","code":"library(recipes) dat <- data.frame(   dt = as.POSIXct(\"2012-01-15\"),   d = as.Date(\"2020-01-01\"),   n = 4,   c = \"h\" )  recipe(~., data = dat) %>%   step_yeet() %>%   prep() %>%   bake(new_data = NULL) #> # A tibble: 1 × 2 #>       n c     #>   <dbl> <fct> #> 1     4 h"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/tidy.recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the Result of a Recipe — tidy.step_date_after","title":"Tidy the Result of a Recipe — tidy.step_date_after","text":"tidy return data frame contains information regarding recipe operation within recipe (tidy method operation exists). See recipes::tidy.recipe information.","code":""},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/tidy.recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the Result of a Recipe — tidy.step_date_after","text":"","code":"# S3 method for step_date_after tidy(x, ...)  # S3 method for step_date_before tidy(x, ...)  # S3 method for step_date_nearest tidy(x, ...)  # S3 method for step_difftime tidy(x, ...)  # S3 method for step_time_event tidy(x, ...)  # S3 method for step_yeet tidy(x, ...)"},{"path":"https://emilhvitfeldt.github.io/extrasteps/reference/tidy.recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the Result of a Recipe — tidy.step_date_after","text":"x step_yeet object. ... currently used.","code":""}]
