% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_names.R
\name{step_clean_names}
\alias{step_clean_names}
\alias{tidy.step_clean_names}
\title{Clean all column names}
\usage{
step_clean_names(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  columns = NULL,
  skip = FALSE,
  id = rand_id("clean_names")
)

tidy.step_clean_names(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables will be transformed. See \code{\link[=selections]{selections()}} for
more details. For the \code{tidy} method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{columns}{Not used in this step as all columns are used.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{bake.recipe()}}? While all operations are baked
when \code{\link[recipes:prep]{prep.recipe()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A \code{step_clean_names} object.}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any). For the
\code{tidy} method, a tibble with columns \code{terms} which
is the columns that will be affected.
}
\description{
\code{step_clean_names} creates a \emph{specification} of a recipe
step that will clean all column names so they are fit for future functions.
}
\examples{
library(recipes)
examples <- data.frame(`5letters` = letters,
                       `   "numbers"` = seq_along(letters))

rec <- recipe(~ ., data = examples) \%>\%
  step_clean_names()

prep(rec) \%>\% juice()
}
