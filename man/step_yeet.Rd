% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yeet.R
\name{step_yeet}
\alias{step_yeet}
\title{Removes date and datetimes variables}
\usage{
step_yeet(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  removals = NULL,
  skip = FALSE,
  id = rand_id("yeet")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose variables
for this step. See \code{\link[recipes:selections]{selections()}} for more details.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{removals}{A character string that contains the names of
columns that should be removed. These values are not determined
until \code{\link[=prep.recipe]{prep.recipe()}} is called.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{bake.recipe()}}? While all operations are baked
when \code{\link[recipes:prep]{prep.recipe()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}
}
\value{
An updated version of \code{recipe} with the new step added to the
sequence of any existing operations.
}
\description{
\code{step_yeet} creates a \emph{specification} of a recipe step
that will remove date and datetime variables. (This is a meme)
}
\examples{
library(recipes)
dat <- data.frame(
  dt = as.POSIXct("2012-01-15"),
  d = as.Date("2020-01-01"),
  n = 4,
  c = "h"
)

recipe(~., data = dat) \%>\%
  step_yeet() \%>\%
  prep() \%>\%
  bake(new_data = NULL)
}
