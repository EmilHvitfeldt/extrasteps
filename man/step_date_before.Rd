% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/date_before.R
\name{step_date_before}
\alias{step_date_before}
\alias{tidy.step_date_before}
\title{Time before Recurrent Date Time Event}
\usage{
step_date_before(
  recipe,
  ...,
  role = "predictor",
  trained = FALSE,
  rules = list(),
  columns = NULL,
  skip = FALSE,
  id = rand_id("date_before")
)

tidy.step_date_before(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose variables
for this step. See \code{\link[recipes:selections]{selections()}} for more details.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{rules}{Named list of \code{almanac} rules.}

\item{columns}{A character string of variables that will be
used as inputs. This field is a placeholder and will be
populated once \code{\link[=prep.recipe]{prep.recipe()}} is used.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{bake.recipe()}}? While all operations are baked
when \code{\link[recipes:prep]{prep.recipe()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A \code{step_date_before} object.}
}
\value{
An updated version of \code{recipe} with the new check added to the
sequence of any existing operations.
}
\description{
\code{step_date_before} creates a \emph{specification} of a recipe
step that will create new columns indicating the time before an
recurrent event.
}
\examples{
library(recipes)
library(extrasteps)
library(almanac)
library(modeldata)

data(Chicago)

on_easter <- yearly() \%>\% recur_on_easter()
on_weekend <- weekly() \%>\% recur_on_weekends()

rules <- list(easter = on_easter, weekend = on_weekend)

rec_spec <- recipe(ridership ~ date, data = Chicago) \%>\%
  step_date_before(date, rules = rules)

rec_spec_preped <- prep(rec_spec)

bake(rec_spec_preped, new_data = NULL)
}
